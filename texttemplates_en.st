{1,
{9,
{"alexkmbk _1CTextTemplates(v1.0) ",1,0,"",""},
{11,
{"Operators",1,0,"",""},
{0,
{"ElseIf",0,0,"elseif","Else If <?> Then"}
},
{0,
{"While",0,0,"While","While <?> Do
		
EndDo;"}
},
{0,
{"For",0,0,"For","For <?> To  Do
	
EndDo;"}
},
{0,
{"For each",0,0,"Fore[ Each]","For Each Item In <?> Do
	
EndDo;"}
},
{0,
{"Procedure",0,0,"Proc[edure]","Procedure <?>()
		
EndProcedure
"}
},
{0,
{"Function",0,0,"Func[tion]","//
//
Function <?>()
		
EndFunction
"}
},
{0,
{"Try",0,0,"Tr[y]","Try
	<?>
Except
    //Message(ErrorDescription(), MessageStatus.Attention);
КонецПопытки;"}
},
{0,
{"Raise",0,0,"ra[ise]","Raise ""<?>"";"}
},
{0,
{"?(,,)",0,0,"?(","?(,,)"}
},
{0,
{"?(,,)",0,0,",(","?(,,)"}
},
{0,
{"If",0,0,"if","If <?> Then
	
EndIf;"}
}
},
{7,
{"Other",1,0,"",""},
{0,
{"format",0,0,"format","Format(<?>, ""<?, FormatString>"")"}
},
{0,
{"TypeCheck",0,1,"typech","If TypeOf(<?""Expression for type checking"">) = Тип(""<?""Choose type"", TypeChoose>"") Then

	<?>

EndIf;"}
},
{0,
{"Font",0,0,"fon[t=]","//	Constructor Font name, Size, Bold, Italic, Underline, Strikeout
Font = new Font(<?>, , , , , );"}
},
{0,
{"ЧислоПрописью",0,0,"Число[Прописью]","ЧислоПрописью(<?>,,""рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2"")"}
},
{0,
{"und",0,0,"und","Undefined"}
},
{0,
{"TypeDescription",0,0,"typed","<?""Type description constructor"", TypeDescriptionConstructor>"}
},
{0,
{"Export",0,0,"exp","Export
<?>"}
}
},
{6,
{"Value collections",1,0,"",""},
{0,
{"ValueTable",0,0,"table=","Table = New ValueTable;
<?>"}
},
{0,
{"Value list",0,0,"l=","List = New ValueList;
<?>"}
},
{0,
{"Structure",0,0,"st=","Struct = New Structure;
<?>"}
},
{0,
{"Map",0,0,"map=","Map = New Map;
<?>"}
},
{0,
{"ValueTree",0,0,"vt=","Tree = New ValueTree;
<?>"}
},
{0,
{"Массив",0,0,"Мас[сив=]","Массив = Новый Массив(<?>);"}
}
},
{11,
{"Queries",1,0,"",""},
{0,
{"Query with constructor",0,0,"Q[uery=]","Query = New Query;
Query.Text = ""<?"""", QueryText>"";
Query.SetParameter("""", <?>);

QueryResult = Query.Execute();
"}
},
{0,
{"ВЫБОР",0,0,"ВЫБОР","ВЫБОР КОГДА <?> ТОГДА ИНАЧЕ КОНЕЦ"}
},
{0,
{"Справочник",0,0,"Спр[авочник.]","Справочник.<?"""", ОбъектМетаданных, ""Справочник"", ""Справочник.ТабличнаяЧасть"">"}
},
{0,
{"Перечисление",0,0,"Переч[исление.]","Перечисление.<?"""", ОбъектМетаданных, ""Перечисление"">"}
},
{0,
{"РегистрСведений",0,0,"Рег[истрСведений.]","РегистрСведений.<?"""", ОбъектМетаданных, ""РегистрСведений""><?"""", ВыборВарианта, ""Основная таблица"", ""<?>"", ""СрезПервых"", "".СрезПервых(<?>)"", ""СрезПоследних"", "".СрехПоследних(<?>)"">"}
},
{0,
{"РегистрНакопления",0,0,"Рег[истрНакопления.]","РегистрНакопления.<?"""", ОбъектМетаданных, ""РегистрНакопления""><?"""", ВыборВарианта, ""Основная таблица"", ""<?>"", ""Остатки"", "".Остатки(<?>)"", ""Обороты"", "".Обороты(<?>)"", ""ОстаткиИОбороты"", "".ОстаткиИОбороты(<?>)"">"}
},
{0,
{"РегистрБухгалтерии",0,0,"Рег[истрБухгалтерии.]","РегистрБухгалтерии.<?"""", ОбъектМетаданных, ""РегистрБухгалтерии""><?"""", ВыборВарианта, ""Основная таблица"", ""<?>"", ""Субконто"", "".Субконто"", ""ДвиженияССубконто"", "".ДвиженияССубконто(<?>)"", ""Остатки"", "".Остатки(<?>)"", ""Обороты"", "".Обороты(<?>)"", ""ОстаткиИОбороты"", "".ОстаткиИОбороты(<?>)"", ""ОборотыДтКт"", "".ОборотыДтКт(<?>)"">"}
},
{0,
{"РегистрРасчета",0,0,"Рег[истрРасчета.]","РегистрРасчета.<?"""", ОбъектМетаданных, ""РегистрРасчета"", ""РегистрРасчета.Перерасчет"">"}
},
{0,
{"LEFT JOIN",0,0,"left","LEFT JOIN"}
},
{0,
{"ПРАВОЕ СОЕДИНЕНИЕ",0,0,"ПРАВОЕ","ПРАВОЕ СОЕДИНЕНИЕ"}
},
{0,
{"Set parameter",0,0,"set[Parameter]","SetParameter(""<?>"",);"}
}
},
{9,
{"Dialogs",1,0,"",""},
{0,
{"FileChoice",0,1,"FileCh[oice=]","ChoiceDlg = new FileDialog(FileDialogMode.FileDialogMode.Open);	
DirChoiceDlg.Title = ""Open""; 
Notify = New NotifyDescription(""ChoiceDlgChoose"",ThisObject);
ChoiceDlg.Show(Notify);
"}
},
{0,
{"Message",0,0,"msg","Message(<?>, MessageStatus.Ordinary);"}
},
{0,
{"MessageBox",0,0,"msgbox","DoMessageBox(<?>,30);"}
},
{0,
{"Вопрос",0,0,"Воп[рос=]","Ответ = Вопрос(""<?""Текст вопроса"">"", <?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60)"}
},
{0,
{"Вопрос с анализом результата",0,0,"Отв[ет=]","Ответ = Вопрос(""<?""Текст вопроса"">"", <?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);
Если Ответ <?"""", ВыборВарианта, ""Равен"", ""="", ""Не равен"", ""<>""> <?""Код возврата диалога"", ВыборВарианта, ""Да"", ""КодВозвратаДиалога.Да"", ""Нет"", ""КодВозвратаДиалога.Нет"", ""ОК"", ""КодВозвратаДиалога.ОК"", ""Отмена"", ""КодВозвратаДиалога.Отмена"", ""Повторить"", ""КодВозвратаДиалога.Повторить"", ""Прервать"", ""КодВозвратаДиалога.Прервать"", ""Пропустить"", ""КодВозвратаДиалога.Пропустить"", ""Тайаут"", ""КодВозвратаДиалога.Таймаут""> Тогда
	<?>
КонецЕсли; "}
},
{0,
{"Информация об ошибке",0,0,"Инфо[рмацияОбОшибке(]","ИнфоОшибки = ИнформацияОбОшибке();
Сообщить(""Описание = '"" + ИнфоОшибки.Описание + ""'"", СтатусСообщения.Внимание);
Сообщить(""Модуль = '"" + ИнфоОшибки.ИмяМодуля + ""'"", СтатусСообщения.Важное);
Сообщить(""НомерСтроки = '"" + ИнфоОшибки.НомерСтроки + ""'"", СтатусСообщения.Важное);
Сообщить(""ИсходнаяСтрока = '"" + ИнфоОшибки.ИсходнаяСтрока + ""'"", СтатусСообщения.Важное);"}
},
{0,
{"Open value",0,0,"open[Value]","OpenValue(<?>);"}
},
{0,
{"Status",0,0,"Stat[us(]","Status(<?>);"}
},
{4,
{"Функции для вызова диалога ввода данных",1,0,"",""},
{0,
{"Ввести дату",0,0,"Ввести[Дату]","РезультатВвода = ВвестиДату(<?>, ""Укажите дату"", ЧастиДаты.<?""Части даты"", ВыборВарианта, ""Дата"", ""Дата"", ""Дата и время"", ""ДатаВремя"", ""Время"", ""Время"">);"}
},
{0,
{"Ввести значение",0,0,"Ввести[Значение]","РезультатВвода = ВвестиЗначение(<?>, ""Введите "", Тип(""<?"""", ВыборТипа>""));"}
},
{0,
{"Ввести строку",0,0,"Ввести[Строку]","РезультатВвода = ВвестиСтроку(<?>, ""Введите "", <?""Длина строки"">, <?"""", ВыборВарианта, ""Не многострочная"", ""Ложь"", ""Многострочная"", ""Истина"">);"}
},
{0,
{"Ввести число",0,0,"Ввести[Число]","РезультатВвода = ВвестиЧисло(<?>, ""Введите "", <?""Длина"">, <?""Точность"">);"}
}
}
},
{2,
{"SpreadsheetDocument",1,0,"",""},
{0,
{"ПолучитьОбласть",0,0,"Обл[асть=]","Область<?""Название области""> = <?>.ПолучитьОбласть(""<?""Название области"">"");"}
},
{0,
{"Template",0,0,"Templ","Template = GetTemplate(<?>);"}
}
},
{23,
{"ShortCuts",1,0,"",""},
{0,
{"BegOfMonth",0,0,"BM","BegOfMonth(<?>)"}
},
{0,
{"EndOfMonth",0,0,"EM","EndOfMonth(<?>)"}
},
{0,
{"BegOfDay",0,0,"BD","BegOfDay(<?>)"}
},
{0,
{"EndOfDay",0,0,"ED","EndOfDay(<?>)"}
},
{0,
{"CurrentDate",0,0,"CD","CurrentDate()"}
},
{0,
{"ПериодДействияНачало",0,0,"ПДН","ПериодДействияНачало"}
},
{0,
{"ПериодДействияКонец",0,0,"ПДК","ПериодДействияКонец"}
},
{0,
{"БазовыйПериодНачало",0,0,"БПН","БазовыйПериодНачало"}
},
{0,
{"БазовыйПериодКонец",0,0,"БПК","БазовыйПериодКонец"}
},
{0,
{"ПланыВидовХарактеристик",0,0,"ПВХ","ПланыВидовХарактеристик"}
},
{0,
{"ValueIsFilled",0,0,"VV","ValueIsFilled("}
},
{0,
{"FillPropertyValues",0,0,"fpv","FillPropertyValues(<?>)"}
},
{0,
{"TrimAll",0,0,"Tr[imAll]","TrimAll(<?>)"}
},
{0,
{"СтрЗаменить",0,0,"СтрЗ[аменить]","СтрЗаменить(<?>,,)"}
},
{0,
{"Обработка прерывания пользователя ",0,0,"ОПП","ОбработкаПрерыванияПользователя();
<?>"}
},
{0,
{"Очистить сообщения",0,0,"ОС","ОчиститьСообщения();
<?>"}
},
{0,
{"Сохранить значение ",0,0,"Сох[ранитьЗначение]","СохранитьЗначение(<?>);"}
},
{0,
{"Восстановить значение ",0,0,"Вос[становитьЗначение]","ВосстановитьЗначение(<?>);"}
},
{0,
{"AtClient",0,0,"cli","&AtClient
<?>"}
},
{0,
{"AtServer",0,0,"srv","&AtServer
<?>
"}
},
{0,
{"AtServerWithoutContext",0,0,"srvw","&AtServerWithoutContext"}
},
{0,
{"AtServerProc",0,0,"srvp","&AtServer
Procedure <?>()
		
EndProcedure"}
},
{0,
{"AtServerFunc",0,0,"srvf","&AtServer
Function <?>()
		
EndFunction
"}
}
},
{4,
{"Comments",1,0,"",""},
{0,
{"Изменение (комментарий)",0,0,"/из[менение]","// { Шеметов С. [<?"""", ДатаВремя, ""ДЛФ=DT"">]
<?>
// } Шеметов С. [<?"""", ДатаВремя, ""ДЛФ=DT"">]"}
},
{0,
{"Отчерк",0,0,"/-","//__________________________________________________________________________________________________________________________
<?>"}
},
{0,
{"Комментарий в две строки",0,0,"/*","// <?>
//"}
},
{0,
{"Module separator",0,0,"/Sep[arator (module)]","///////////////////////////////////////////////////////////////////////////////
// FORM EVENTS PROCESSING"}
}
},
{2,
{"Module templates",1,0,"",""},
{2,
{"Справочники",1,0,"",""},
{0,
{"Модуль формы",0,0,"","////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ <Наименование>

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
"}
},
{0,
{"Модуль объекта",0,0,"","////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
"}
}
},
{2,
{"Документы",1,0,"",""},
{0,
{"Модуль формы",0,0,"","////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <Наименование>

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

"}
},
{0,
{"Модуль объекта",0,0,"","////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
"}
}
}
}
}
}